/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ArgumentsDecoderTest,
  ArgumentsDecoderTestInterface,
} from "../ArgumentsDecoderTest";

const _abi = [
  {
    inputs: [],
    name: "fBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "fUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testDecodeBool",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testDecodeUint",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103c0806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806343c6e83d146100515780638e28d03c14610067578063ab080b7414610071578063be69396614610085575b600080fd5b6001604080519115158252519081900360200190f35b61006f61008d565b005b607b60408051918252519081900360200190f35b61006f610209565b604080517fab080b740000000000000000000000000000000000000000000000000000000060208083019190915282518083036004018152602490920192839052815160009384933093909282918401908083835b602083106101015780518252601f1990920191602091820191016100e2565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610161576040519150601f19603f3d011682016040523d82523d6000602084013e610166565b606091505b5091509150816101bd576040805162461bcd60e51b815260206004820152601160248201527f6655696e742063616c6c206661696c6564000000000000000000000000000000604482015290519081900360640190fd5b60005a90506101cd826020015190565b505a6101d9908261034c565b905060005a90508280602001905160208110156101f557600080fd5b50505a610202908261034c565b5050505050565b604080517f43c6e83d0000000000000000000000000000000000000000000000000000000060208083019190915282518083036004018152602490920192839052815160009384933093909282918401908083835b6020831061027d5780518252601f19909201916020918201910161025e565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146102dd576040519150601f19603f3d011682016040523d82523d6000602084013e6102e2565b606091505b509150915081610339576040805162461bcd60e51b815260206004820152601160248201527f66426f6f6c2063616c6c206661696c6564000000000000000000000000000000604482015290519081900360640190fd5b60005a90506101cd826020015160011490565b600082821015610385577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea2646970667358221220070e8689905eaf934c92722dd0dcb4fd3c0ad89439f9b8c8a855599b075a336664736f6c634300080b0033";

type ArgumentsDecoderTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArgumentsDecoderTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArgumentsDecoderTest__factory extends ContractFactory {
  constructor(...args: ArgumentsDecoderTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ArgumentsDecoderTest";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArgumentsDecoderTest> {
    return super.deploy(overrides || {}) as Promise<ArgumentsDecoderTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ArgumentsDecoderTest {
    return super.attach(address) as ArgumentsDecoderTest;
  }
  connect(signer: Signer): ArgumentsDecoderTest__factory {
    return super.connect(signer) as ArgumentsDecoderTest__factory;
  }
  static readonly contractName: "ArgumentsDecoderTest";
  public readonly contractName: "ArgumentsDecoderTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArgumentsDecoderTestInterface {
    return new utils.Interface(_abi) as ArgumentsDecoderTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArgumentsDecoderTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArgumentsDecoderTest;
  }
}
