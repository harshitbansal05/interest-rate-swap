/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721ProxySafe,
  ERC721ProxySafeInterface,
} from "../ERC721ProxySafe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_immutableOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
    ],
    name: "func_60iHVgK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "immutableOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516102783803806102788339818101604052602081101561003357600080fd5b50516001600160a01b03166080819052610218610060600039600081816086015260cf01526102186000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323b872dd1461003b5780638ec7356814610081575b600080fd5b61007f600480360360a081101561005157600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608090910135166100c4565b005b6100a87f000000000000000000000000000000000000000000000000000000000000000081565b604080516001600160a01b039092168252519081900360200190f35b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461015b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494f3a204163636573732064656e696564000000000000000000000000000000604482015290519081900360640190fd5b806001600160a01b03166342842e0e8686856040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b1580156101c357600080fd5b505af11580156101d7573d6000803e3d6000fd5b50505050505050505056fea2646970667358221220f462ad3ff20101ddc3a298064909922b2501f96fa972e8cb81875aac5a1d94c864736f6c634300080b0033";

type ERC721ProxySafeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ProxySafeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ProxySafe__factory extends ContractFactory {
  constructor(...args: ERC721ProxySafeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721ProxySafe";
  }

  deploy(
    _immutableOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721ProxySafe> {
    return super.deploy(
      _immutableOwner,
      overrides || {}
    ) as Promise<ERC721ProxySafe>;
  }
  getDeployTransaction(
    _immutableOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_immutableOwner, overrides || {});
  }
  attach(address: string): ERC721ProxySafe {
    return super.attach(address) as ERC721ProxySafe;
  }
  connect(signer: Signer): ERC721ProxySafe__factory {
    return super.connect(signer) as ERC721ProxySafe__factory;
  }
  static readonly contractName: "ERC721ProxySafe";
  public readonly contractName: "ERC721ProxySafe";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ProxySafeInterface {
    return new utils.Interface(_abi) as ERC721ProxySafeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ProxySafe {
    return new Contract(address, _abi, signerOrProvider) as ERC721ProxySafe;
  }
}
