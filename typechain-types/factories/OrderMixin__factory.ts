/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { OrderMixin, OrderMixinInterface } from "../OrderMixin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "NonceIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingRaw",
        type: "uint256",
      },
    ],
    name: "OrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    inputs: [],
    name: "LIMIT_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "advanceNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "and",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "arbitraryStaticCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetAlpha",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetBeta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetLowerBoundMul",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetSigma",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetUpperBoundMul",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "checkPredicate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "defaultedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "oracle1",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "oracle2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "spread",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "decimalsScale",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "doublePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "fixedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "variableTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdTokens",
        type: "uint256",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "fixedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "variableTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdTokens",
        type: "uint256",
      },
    ],
    name: "fillOrderTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "fixedTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "variableTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thresholdTokens",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "fillOrderToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlyingAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
    ],
    name: "getAverageAccruedAPYBetweenTimestamps",
    outputs: [
      {
        internalType: "int128",
        name: "apy",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "ewma",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "getInitialMarginReq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderMakerAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "orderTakerAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapTakerAmount",
        type: "uint256",
      },
    ],
    name: "getMakerAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "getMarginReq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderMakerAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "orderTakerAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapMakerAmount",
        type: "uint256",
      },
    ],
    name: "getTakerAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isOrderDefaulted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "defaulter",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidatorMargin",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "makerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makerNonce",
        type: "uint256",
      },
    ],
    name: "nonceEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oppositePartyMargin",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oppositePartyMarginNoLiquidator",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "or",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "orderParticipantFixedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "orderParticipantMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "orderParticipantVariableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "remaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "remainingRaw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "orderHashes",
        type: "bytes32[]",
      },
    ],
    name: "remainingsRaw",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "int128",
        name: "alpha",
        type: "int128",
      },
    ],
    name: "setAssetAlpha",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "int128",
        name: "beta",
        type: "int128",
      },
    ],
    name: "setAssetBeta",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "int128",
        name: "lowerBoundMul",
        type: "int128",
      },
    ],
    name: "setAssetLowerBoundMul",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "int128",
        name: "sigma",
        type: "int128",
      },
    ],
    name: "setAssetSigma",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "int128",
        name: "upperBoundMul",
        type: "int128",
      },
    ],
    name: "setAssetUpperBoundMul",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_liquidatorMargin",
        type: "int128",
      },
    ],
    name: "setLiquidatorMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_oppositePartyMargin",
        type: "int128",
      },
    ],
    name: "setOppositePartyMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_oppositePartyMarginNoLiquidator",
        type: "int128",
      },
    ],
    name: "setOppositePartyMarginNoLiquidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fixedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "variableTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFixedTaker",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "beginTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "int128",
            name: "t",
            type: "int128",
          },
          {
            internalType: "bytes",
            name: "makerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "takerAssetData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getMakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "getTakerAmount",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "predicate",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "interaction",
            type: "bytes",
          },
        ],
        internalType: "struct OrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "settler",
        type: "address",
      },
    ],
    name: "settleOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "simulateCalls",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inverseAndSpread",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "singlePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "timestampBelow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class OrderMixin__factory {
  static readonly abi = _abi;
  static createInterface(): OrderMixinInterface {
    return new utils.Interface(_abi) as OrderMixinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderMixin {
    return new Contract(address, _abi, signerOrProvider) as OrderMixin;
  }
}
